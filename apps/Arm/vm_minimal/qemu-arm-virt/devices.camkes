/*
 * Copyright 2018, Data61, CSIRO (ABN 41 687 119 230)
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

#include <configurations/vm.h>

#define VM_RAM_BASE 0x40000000
#define VM_RAM_SIZE 0x20000000
#define VM_DTB_ADDR 0x4F000000
#define VM_INITRD_ADDR 0x4D700000
#define VM_ENTRY_ADDR 0x40080000

assembly {
	composition {}
	configuration {

        vm0.vm_address_config = {
            "ram_base" : VAR_STRINGIZE(VM_RAM_BASE),
            "ram_paddr_base" : VAR_STRINGIZE(VM_RAM_BASE),
            "ram_size" : VAR_STRINGIZE(VM_RAM_SIZE),
            "dtb_addr" : VAR_STRINGIZE(VM_DTB_ADDR),
            "initrd_addr" : VAR_STRINGIZE(VM_INITRD_ADDR),
            "kernel_entry_addr" : VAR_STRINGIZE(VM_ENTRY_ADDR),
        };

        vm0.vm_image_config = {
            "kernel_bootcmdline" : "",
            "kernel_stdout" : "/pl011@9000000",
            "provide_dtb" : false,
            "generate_dtb" : true,
            "map_one_to_one" : true,
        };
        vm0.num_vcpus = 2;

        vm0.dtb = dtb([
                        {"path": "/pl011@9000000"},
                    ]);

        vm0.untyped_mmios = [
                    "0x8040000:12", // Interrupt Controller Virtual CPU interface (Virtual Machine view)
                    "0x40000000:29", // Linux kernel memory regions
                    ];
	}
}
